{"version":3,"sources":["traceable.js"],"names":["Object","defineProperty","exports","value","traceable","arg","key","dtor","_traceable","flag","name","target","wrap","fn","callback","gn","__traced__","undefined","constructor","tn","args","global","TRACE","_console","CONSOLE","console","t0","Date","result","apply","dt","setTimeout","group","length","debug","groupEnd","el","hasOwnProperty","get","set","default"],"mappings":"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","file":"traceable.js","sourcesContent":["\"use strict\";\n/* tslint:disable:ban-types */\n/* tslint:disable:no-string-literal */\n/* tslint:disable:only-arrow-functions */\n/* tslint:disable:trailing-comma */\n/* tslint:disable:variable-name */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction traceable(arg, key, dtor) {\n    if (typeof arg === \"boolean\") {\n        return _traceable(arg);\n    }\n    else {\n        _traceable(true)(arg, key, dtor);\n    }\n}\nexports.traceable = traceable;\nfunction _traceable(flag, name) {\n    return function (target, key, dtor) {\n        const wrap = (fn, callback) => {\n            const gn = fn;\n            if (!flag) {\n                gn.__traced__ = null;\n            }\n            else {\n                if (gn.__traced__ === undefined) {\n                    if (name !== undefined) {\n                        gn.__traced__ = name;\n                    }\n                    else {\n                        if (target.constructor &&\n                            target.constructor.name !== undefined) {\n                            gn.__traced__ = target.constructor.name;\n                        }\n                        else if (target.name !== undefined) {\n                            gn.__traced__ = target.name;\n                        }\n                        else {\n                            gn.__traced__ = \"@\";\n                        }\n                    }\n                    const tn = function (...args) {\n                        if (global.TRACE) {\n                            const _console = global.CONSOLE\n                                ? global.CONSOLE\n                                : console;\n                            const t0 = new Date();\n                            const result = gn.apply(this, args);\n                            const dt = new Date() - t0;\n                            setTimeout(() => {\n                                _console.group(`${gn.__traced__}.${key}`, \"[\", dt, \"ms\", \"]\");\n                                if (args.length > 0) {\n                                    _console.debug(...args);\n                                }\n                                if (result !== undefined) {\n                                    _console.debug(result);\n                                }\n                                _console.groupEnd();\n                            }, global.TRACE || 0);\n                            return result;\n                        }\n                        else {\n                            return gn.apply(this, args);\n                        }\n                    };\n                    for (const el in gn) {\n                        if (gn.hasOwnProperty(el)) {\n                            tn[el] = gn[el];\n                        }\n                    }\n                    callback(tn);\n                }\n            }\n        };\n        if (dtor) {\n            if (typeof dtor.value === \"function\") {\n                wrap(dtor.value, (tn) => {\n                    dtor.value = tn;\n                });\n            }\n            else {\n                if (typeof dtor.get === \"function\") {\n                    wrap(dtor.get, (tn) => {\n                        dtor.get = tn;\n                    });\n                }\n                if (typeof dtor.set === \"function\") {\n                    wrap(dtor.set, (tn) => {\n                        dtor.set = tn;\n                    });\n                }\n            }\n        }\n        else {\n            wrap(target[key], (tn) => {\n                target[key] = tn;\n            });\n        }\n    };\n}\nexports._traceable = _traceable;\nexports.default = traceable;\n"]}