{"version":3,"sources":["trace.js"],"names":["Object","defineProperty","exports","value","traceable_1","require","trace","arg","_trace","flag","ctor","global","TRACE","getOwnPropertyNames","prototype","forEach","name","dtor","getOwnPropertyDescriptor","_traceable","default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,cAAcC,QAAQ,aAAR,CAApB;AACA,SAASC,KAAT,CAAeC,GAAf,EAAoB;AAChB,QAAI,OAAOA,GAAP,KAAe,SAAnB,EAA8B;AAC1B,eAAOC,OAAOD,GAAP,CAAP;AACH,KAFD,MAGK;AACDC,eAAO,IAAP,EAAaD,GAAb;AACH;AACJ;AACDL,QAAQI,KAAR,GAAgBA,KAAhB;AACA,SAASE,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,WAAO,UAAUC,IAAV,EAAgB;AACnB,YAAID,QAAQE,OAAOC,KAAnB,EAA0B;AACtBZ,mBAAOa,mBAAP,CAA2BH,KAAKI,SAAhC,EAA2CC,OAA3C,CAAmD,UAACC,IAAD,EAAU;AACzD,oBAAMC,OAAOjB,OAAOkB,wBAAP,CAAgCR,KAAKI,SAArC,EAAgDE,IAAhD,CAAb;AACA,oBAAIC,QAAQ,OAAOA,KAAKd,KAAZ,KAAsB,UAAlC,EAA8C;AAC1CC,gCAAYe,UAAZ,CAAuBV,IAAvB,EAA6BC,KAAKM,IAAlC,EAAwCN,KAAKI,SAA7C,EAAwDE,IAAxD;AACH;AACJ,aALD;AAMAhB,mBAAOa,mBAAP,CAA2BH,IAA3B,EAAiCK,OAAjC,CAAyC,UAACC,IAAD,EAAU;AAC/C,oBAAMC,OAAOjB,OAAOkB,wBAAP,CAAgCR,IAAhC,EAAsCM,IAAtC,CAAb;AACA,oBAAIC,QAAQ,OAAOA,KAAKd,KAAZ,KAAsB,UAAlC,EAA8C;AAC1CC,gCAAYe,UAAZ,CAAuBV,IAAvB,EAA6BC,KAAKM,IAAlC,EAAwCN,IAAxC,EAA8CM,IAA9C;AACH;AACJ,aALD;AAMH;AACJ,KAfD;AAgBH;AACDd,QAAQM,MAAR,GAAiBA,MAAjB;AACAN,QAAQkB,OAAR,GAAkBd,KAAlB","file":"trace.js","sourcesContent":["\"use strict\";\n/* tslint:disable:ban-types */\n/* tslint:disable:only-arrow-functions */\n/* tslint:disable:space-before-function-paren */\n/* tslint:disable:trailing-comma */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst traceable_1 = require(\"./traceable\");\nfunction trace(arg) {\n    if (typeof arg === \"boolean\") {\n        return _trace(arg);\n    }\n    else {\n        _trace(true)(arg);\n    }\n}\nexports.trace = trace;\nfunction _trace(flag) {\n    return function (ctor) {\n        if (flag && global.TRACE) {\n            Object.getOwnPropertyNames(ctor.prototype).forEach((name) => {\n                const dtor = Object.getOwnPropertyDescriptor(ctor.prototype, name);\n                if (dtor && typeof dtor.value === \"function\") {\n                    traceable_1._traceable(flag, ctor.name)(ctor.prototype, name);\n                }\n            });\n            Object.getOwnPropertyNames(ctor).forEach((name) => {\n                const dtor = Object.getOwnPropertyDescriptor(ctor, name);\n                if (dtor && typeof dtor.value === \"function\") {\n                    traceable_1._traceable(flag, ctor.name)(ctor, name);\n                }\n            });\n        }\n    };\n}\nexports._trace = _trace;\nexports.default = trace;\n"]}